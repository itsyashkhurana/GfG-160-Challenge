  for (int &num : arr) {  
        if (num == 0) {  
            num = -1;  
        }  
    }  

    std::unordered_map<int, int> sumIndexMap;  
    sumIndexMap[0] = -1; // To handle the case where the sum is zero at an index  
    int maxLength = 0, sum = 0;  

    for (int i = 0; i < arr.size(); ++i) {  
        sum += arr[i];  

        // Check if this sum has been seen before  
        if (sumIndexMap.find(sum) != sumIndexMap.end()) {  
            int length = i - sumIndexMap[sum];  
            maxLength = std::max(maxLength, length);  
        } else {  
            // Store the first occurrence of this sum  
            sumIndexMap[sum] = i;  
        }  
    }  

    return maxLength;  
