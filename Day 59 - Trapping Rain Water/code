 unordered_map<char, int> charIndex;  
    int maxLength = 0;  
    int start = 0;  

    for (int end = 0; end < s.length(); end++) {  
        if (charIndex.find(s[end]) != charIndex.end()) {  
            // Move the start to the right of the last occurrence of s[end]  
            start = max(start, charIndex[s[end]] + 1);  
        }  
        charIndex[s[end]] = end; // Update the last seen index of the character  
        maxLength = max(maxLength, end - start + 1); // Update the maximum length  
    }  

    return maxLength;
